What happens when you initialize a repository? Why do you need to do it?
Git creates a .git folder inside the working directory and use it to store metadata about the files in the directory. 
We need to initialize a repository because git needs a place to store old versions (metadata). 


How is the staging area different from the working directory and the repository? What value do you think it offers?
The working directory contains the files that are constanly being edited. Staging area is a git devise that give programmers
flexibility by letting select what changes make up a logical commit point. (Physical file management , git file management)  

How can you use the staging area to make sure you have one commit per logical change?
Because you can add changes one by one to the staging area until you ready to commit.
It you have a very big change to make staging area help stay organize in the process.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Situations where we need to experiments or add new features without affecting production.
Branches would work like a copy where changes can be made without affecting anything else (independence from main branch)

How do the diagrams help you visualize the branch structure?
Helps to pint point commun ancestor. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
It brings two set of independent changes together

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
The pros is that it saves alot of time the cons is that it not always work 100% a manual intervention is required.